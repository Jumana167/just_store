rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 🛍️ products
    match /products/{productId} {
      allow create: if request.auth != null;
      allow read: if true;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // 🔐 users collection
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null; // Allow reading all users for search functionality
      allow update, delete: if request.auth != null && request.auth.uid == userId;
      
      // إضافة قواعد التقييمات
      match /ratings/{ratingId} {
        allow read: if request.auth != null; // أي مستخدم مسجل يمكنه قراءة التقييمات
        allow create: if request.auth != null 
          && request.auth.uid != userId // لا يمكن للمستخدم تقييم نفسه
          && !exists(/databases/$(database)/documents/users/$(userId)/ratings/$(request.auth.uid)); // لا يمكن تقييم نفس الشخص مرتين
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.ratedBy; // فقط من قام بالتقييم يمكنه تعديله أو حذفه
      }
      
      match /orders/{orderId} {
        allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      }
      
      match /profile/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // 🔐 favorites - المفضلات الخاصة بكل مستخدم
      match /favorites/{favId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // 🔐 likes
    match /likes/{likeId} {
      allow read, write: if request.auth != null;
    }
    
    // 🔐 notifications
    match /notifications/{notifId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.uid;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
    
    // 🔐 chat_rooms collection
    match /chat_rooms/{chatId} {
      // قراءة المحادثة
      allow read: if request.auth != null && request.auth.uid in resource.data.participants;
      
      // إنشاء محادثة جديدة
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      
      // تحديث المحادثة
      allow update: if request.auth != null && request.auth.uid in resource.data.participants;
      
      // حذف المحادثة
      allow delete: if request.auth != null && request.auth.uid in resource.data.participants;
      
      // 🔐 messages subcollection
      match /messages/{messageId} {
        // قراءة الرسائل
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chat_rooms/$(chatId)).data.participants;
        
        // إنشاء رسالة جديدة
        allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chat_rooms/$(chatId)).data.participants;
        
        // تحديث الرسالة
        allow update: if request.auth != null && (
          request.auth.uid == resource.data.senderId || // المرسل يمكنه تحديث رسالته
          request.auth.uid in get(/databases/$(database)/documents/chat_rooms/$(chatId)).data.participants // المشاركون يمكنهم تحديث حالة القراءة
        );
        
        // حذف الرسالة
        allow delete: if request.auth != null && request.auth.uid == resource.data.senderId;
      }
    }
    
    // 🔐 user_status (for online/offline status)
    match /user_status/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // 🔐 posts
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null; // السماح لأي مستخدم بتحديث المنشورات (للايك)
      allow delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
      
      // Comments in posts
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      }
    }
    
    // 🔐 otp_codes
    match /otp_codes/{email} {
      allow read, write: if request.auth != null;
    }
    
    // 🔐 arts_products
    match /arts_products/{productId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }
  }
} 