rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 🔐 products
    match /products/{productId} {
      allow create: if request.auth != null;
      allow read: if true;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // 🔐 users collection
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      
      match /orders/{orderId} {
        allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      }
      
      match /profile/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // 🔐 favorites - المفضلات الخاصة بكل مستخدم
      match /favorites/{favId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // 🔐 likes
    match /likes/{likeId} {
      allow read, write: if request.auth != null;
    }
    
    // 🔐 notifications
    match /notifications/{notifId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.uid;
    }
    
    // 🔐 chat_rooms collection
    match /chat_rooms/{chatId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.users;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.users;
      allow update: if request.auth != null && request.auth.uid in resource.data.users;
      allow delete: if request.auth != null && request.auth.uid in resource.data.users;

      // 🔐 messages subcollection
      match /messages/{messageId} {
        allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chat_rooms/$(chatId)).data.users;
        allow create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chat_rooms/$(chatId)).data.users;
        allow update, delete: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chat_rooms/$(chatId)).data.users;
      }
    }
    
    // 🔐 user_status (for online/offline status)
    match /user_status/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // 🔐 posts
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
      
      // Comments in posts
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      }
    }
    
    // 🔐 otp_codes
    match /otp_codes/{email} {
      allow read, write: if request.auth != null;
    }
    
    // 🔐 arts_products (if you have this collection)
    match /arts_products/{productId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }
  }
} 